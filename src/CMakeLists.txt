add_executable(
  gl
  asset_manager.hpp
  asset_manager.cpp
  camera.hpp
  camera.cpp
  component.hpp
  component.cpp
  color.hpp
  logging.hpp
  event.hpp
  file.hpp
  file.cpp
  font.hpp
  font.cpp
  game_object.hpp
  game_object.cpp
  gizmo_drawer.hpp
  gizmo_drawer.cpp
  gizmo_object.hpp
  gizmo_object.cpp
  gl_error_handler.hpp
  gl_error_handler.cpp
  gl_window.hpp
  gl_window.cpp
  image.hpp
  image.cpp
  main.cpp
  material.hpp
  material.cpp
  mesh.hpp
  mesh.cpp
  mouse_events_refiner.hpp
  mouse_events_refiner.cpp
  scene.hpp
  scene.cpp
  shader.hpp
  shader.cpp
  vertex.hpp
  texture_viewer.hpp
  texture_viewer.cpp
  texture.hpp
  texture.cpp
  thread.hpp
  thread.cpp
  transform.hpp
  transform.cpp
  uniform_info.hpp
  utils.hpp
  glad/src/gl.c
  asset_loaders/asset_loader.hpp
  asset_loaders/fbx.hpp
  asset_loaders/fbx.cpp
  asset_loaders/jpg.hpp
  asset_loaders/jpg.cpp
  asset_loaders/mat.hpp
  asset_loaders/mat.cpp
  asset_loaders/png.hpp
  asset_loaders/png.cpp
  asset_loaders/shader.hpp
  asset_loaders/shader.cpp
  components/mesh_component.hpp
  components/mesh_component.cpp
  components/mesh_renderer_component.hpp
  components/mesh_renderer_component.cpp
  components/text_component.hpp
  components/text_component.cpp
  components/text_renderer_component.hpp
  components/text_renderer_component.cpp)

target_include_directories(gl PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

target_link_libraries(
  gl
  PUBLIC glfw
         glm
         assimp::assimp
         PNG::PNG
         profiler::lib
         spdlog::spdlog
         JPEG::JPEG
         freetype)
target_include_directories(gl PRIVATE glad/include)
